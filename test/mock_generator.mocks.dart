// Mocks generated by Mockito 5.4.4 from annotations
// in send_money_app/test/mock_generator.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i8;
import 'dart:typed_data' as _i10;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:send_money_app/models/response/dashboard_response.dart' as _i4;
import 'package:send_money_app/models/response/login_response.dart' as _i3;
import 'package:send_money_app/models/response/send_money_response.dart' as _i5;
import 'package:send_money_app/models/response/transactions_response.dart'
    as _i6;
import 'package:send_money_app/repositories/dashboard_repository.dart' as _i12;
import 'package:send_money_app/repositories/login_repository.dart' as _i11;
import 'package:send_money_app/repositories/send_money_repository.dart' as _i13;
import 'package:send_money_app/repositories/view_transactions_repository.dart'
    as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginResponse_2 extends _i1.SmartFake implements _i3.LoginResponse {
  _FakeLoginResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDashboardResponse_3 extends _i1.SmartFake
    implements _i4.DashboardResponse {
  _FakeDashboardResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSendMoneyResponse_4 extends _i1.SmartFake
    implements _i5.SendMoneyResponse {
  _FakeSendMoneyResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionsResponse_5 extends _i1.SmartFake
    implements _i6.TransactionsResponse {
  _FakeTransactionsResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  @override
  _i7.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i2.Response>);

  @override
  _i7.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i2.Response>);

  @override
  _i7.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i8.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response>);

  @override
  _i7.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i8.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response>);

  @override
  _i7.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i8.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response>);

  @override
  _i7.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i8.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i2.Response>);

  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i10.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i10.Uint8List>.value(_i10.Uint8List(0)),
        returnValueForMissingStub:
            _i7.Future<_i10.Uint8List>.value(_i10.Uint8List(0)),
      ) as _i7.Future<_i10.Uint8List>);

  @override
  _i7.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i11.LoginRepository {
  @override
  _i7.Future<_i3.LoginResponse> login({
    required String? userName,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #userName: userName,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i3.LoginResponse>.value(_FakeLoginResponse_2(
          this,
          Invocation.method(
            #login,
            [],
            {
              #userName: userName,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.LoginResponse>.value(_FakeLoginResponse_2(
          this,
          Invocation.method(
            #login,
            [],
            {
              #userName: userName,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i3.LoginResponse>);
}

/// A class which mocks [DashboardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDashboardRepository extends _i1.Mock
    implements _i12.DashboardRepository {
  @override
  _i7.Future<_i4.DashboardResponse> fetchWalletBalance() => (super.noSuchMethod(
        Invocation.method(
          #fetchWalletBalance,
          [],
        ),
        returnValue:
            _i7.Future<_i4.DashboardResponse>.value(_FakeDashboardResponse_3(
          this,
          Invocation.method(
            #fetchWalletBalance,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.DashboardResponse>.value(_FakeDashboardResponse_3(
          this,
          Invocation.method(
            #fetchWalletBalance,
            [],
          ),
        )),
      ) as _i7.Future<_i4.DashboardResponse>);
}

/// A class which mocks [SendMoneyRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendMoneyRepository extends _i1.Mock
    implements _i13.SendMoneyRepository {
  @override
  _i7.Future<_i5.SendMoneyResponse> sendMoney({required String? amount}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMoney,
          [],
          {#amount: amount},
        ),
        returnValue:
            _i7.Future<_i5.SendMoneyResponse>.value(_FakeSendMoneyResponse_4(
          this,
          Invocation.method(
            #sendMoney,
            [],
            {#amount: amount},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i5.SendMoneyResponse>.value(_FakeSendMoneyResponse_4(
          this,
          Invocation.method(
            #sendMoney,
            [],
            {#amount: amount},
          ),
        )),
      ) as _i7.Future<_i5.SendMoneyResponse>);
}

/// A class which mocks [ViewTransactionsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockViewTransactionsRepository extends _i1.Mock
    implements _i14.ViewTransactionsRepository {
  @override
  _i7.Future<_i6.TransactionsResponse> getTransactions() => (super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [],
        ),
        returnValue: _i7.Future<_i6.TransactionsResponse>.value(
            _FakeTransactionsResponse_5(
          this,
          Invocation.method(
            #getTransactions,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i6.TransactionsResponse>.value(
            _FakeTransactionsResponse_5(
          this,
          Invocation.method(
            #getTransactions,
            [],
          ),
        )),
      ) as _i7.Future<_i6.TransactionsResponse>);
}
